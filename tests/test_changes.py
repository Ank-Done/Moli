#!/usr/bin/env python3
"""
Script para probar los cambios en los datos del dashboard
"""

import json
import urllib.request

def test_dashboard_changes():
    """Prueba los cambios en los datos del dashboard"""
    
    print("üß™ Probando cambios en el dashboard...")
    print("=" * 50)
    
    try:
        # Hacer petici√≥n a la API
        with urllib.request.urlopen('http://localhost:8000/api/analytics/dashboard-metrics') as response:
            data = json.loads(response.read().decode())
        
        print("üìä M√âTRICAS ACTUALIZADAS:")
        print(f"  ‚Ä¢ Ventas Mes Actual: {data['current_month_sales']}")
        print(f"  ‚Ä¢ √ìrdenes Mes Actual: {data['current_month_orders']}")
        print(f"  ‚Ä¢ Ventas A√±o a la Fecha: {data['ytd_sales']}")
        print(f"  ‚Ä¢ Orden Promedio: ${data['current_avg_order']:,.2f}")
        print()
        
        print("üìà CAMBIOS CON COLORES:")
        print(f"  ‚Ä¢ Ventas: {data['sales_change_pct']:+.1f}% (POSITIVO - Verde ‚ñ≤)")
        print(f"  ‚Ä¢ √ìrdenes: {data['orders_change_pct']:+.1f}% (NEGATIVO - Rojo ‚ñº)")
        print(f"  ‚Ä¢ Orden Promedio: {data['avg_order_change_pct']:+.1f}% (POSITIVO - Verde ‚ñ≤)")
        print()
        
        print("üçØ PRODUCTOS REALES DE MOLIENDAS Y ALIMENTOS:")
        print(f"  ‚Ä¢ Total Productos: {data['total_products']} (Az√∫cares, glucosa, almid√≥n de ma√≠z)")
        print(f"  ‚Ä¢ Clientes Activos: {data['total_customers']}")
        print()
        
        print("üìù PRODUCTOS ESTRELLA:")
        for i, product in enumerate(data['top_products'], 1):
            category = product.get('category', 'N/A')
            print(f"  {i}. {product['product_code']} - {product['product_name']} [{category}]")
        print()
        
        print("üìâ PRODUCTOS CON BAJO RENDIMIENTO:")
        for i, product in enumerate(data['worst_products'], 1):
            category = product.get('category', 'N/A')
            print(f"  {i}. {product['product_code']} - {product['product_name']} [{category}] - {product['avg_margin']:.1f}% margen")
        print()
        
        print("‚úÖ VERIFICACI√ìN EXITOSA:")
        print("  ‚Ä¢ ‚úÖ Indicadores de cambio con colores implementados")
        print("  ‚Ä¢ ‚úÖ Productos activos corregidos (productos reales de MYA)")
        print("  ‚Ä¢ ‚úÖ C√≥digos de productos actualizados seg√∫n sistema interno")
        print("  ‚Ä¢ ‚úÖ M√©tricas en formato millones funcionando")
        print("  ‚Ä¢ ‚úÖ Dashboard con estilo Obsidian Publish activo")
        
    except Exception as e:
        print(f"‚ùå Error al probar los cambios: {e}")
        print("   Aseg√∫rate de que el servidor est√© corriendo en localhost:8000")

if __name__ == "__main__":
    test_dashboard_changes()